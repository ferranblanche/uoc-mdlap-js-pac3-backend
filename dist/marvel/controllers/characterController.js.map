{"version":3,"sources":["../../../src/marvel/controllers/characterController.js"],"names":["searchCharacterById","id","keys","baseUrl","sugar","hash","query","public","result","character","data","results","Error","name","description","image","thumbnail","path","extension","error","searchCharactersByName","console","log","characters","length","map","searchCharactersByComic"],"mappings":"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","file":"characterController.js","sourcesContent":["import axios from 'axios';\nimport getConnectionParams from '../resources/marvel-api-params';\n\n// Search Character by Id\nexport var searchCharacterById = async (id) => {\n    let { keys, baseUrl, sugar, hash } = getConnectionParams();\n    let query = `${baseUrl}/characters/${id}?ts=${sugar}&apikey=${keys.public}&hash=${hash}`;\n    try {\n        let result = await axios(query);\n        let character = result.data.data.results[0];\n        if (!character) {\n            throw new Error(`Unable to find a character with id ${id}`);\n        }\n        return {\n            id: character.id,\n            name: character.name,\n            description: character.description,\n            image: `${character.thumbnail.path}.${character.thumbnail.extension}`\n        };\n    } catch (error) {\n        throw new Error(error);\n    };\n};\n\n// Search Character List by Name\nexport var searchCharactersByName = async (name) => {\n    let { keys, baseUrl, sugar, hash } = getConnectionParams();\n    let query = `${baseUrl}/characters?nameStartsWith=${name}&ts=${sugar}&apikey=${keys.public}&hash=${hash}`;\n    console.log(query);\n    \n    try {\n        let result = await axios(query);\n        let characters = result.data.data.results;\n        if (characters.length == 0) {\n            throw new Error(`Unable to find a characters named ${name}`);\n        }\n        return characters.map(character => {\n            return {\n                name: character.name || \"\",\n                description: character.description || \"\",\n                id: character.id,\n                image: `${character.thumbnail.path}.${character.thumbnail.extension}`\n            };\n        });\n    } catch (error) {\n        throw new Error(error);\n    };\n}\n\n// Search Characters by Comic\nexport var searchCharactersByComic = async (id) => {\n    let { keys, baseUrl, sugar, hash } = getConnectionParams();\n    let query = `${baseUrl}/comics/${id}/characters?ts=${sugar}&apikey=${keys.public}&hash=${hash}`;    \n    try {\n        let result = await axios(query);\n        let characters = result.data.data.results;\n        if (characters.length == 0) {\n            throw new Error(`Unable to find a characters appearing in a comic with id ${id}`);\n        }\n        return characters.map(character => {\n            return {\n                name: character.name || \"\",\n                description: character.description || \"\",\n                id: character.id,\n                image: `${character.thumbnail.path}.${character.thumbnail.extension}`\n            };\n        });\n    } catch (error) {\n        throw new Error(error);\n    };\n}"]}